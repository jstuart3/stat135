for (i in 1:295) {
if (random_palindromes[1, i] <= 5000) {
print(random_palindromes[1 , i])
}
}
random_palindromes[1, 50]
random_palindromes[1, 500]
for (i in 1:295) {
if (random_palindromes[i, 1] <= 5000) {
print(random_palindromes[i , 1])
}
}
for (i in 1:295) {
if (random_palindromes[i, 1] <= 4000) {
print(random_palindromes[i , 1])
}
}
for (i in 1:295) {
if (random_palindromes[i, 1] <= 4000) {
print(random_palindromes[i , 1])
}
}
for (i in 1:295) {
if (4001 <= random_palindromes[i, 1] <= 8000 ) {
for (i in 1:295) {
if (random_palindromes[i, 1] <= 4000) {
print(random_palindromes[i , 1])
}
}
for (i in 1:295) {
if (4001 <= random_palindromes[i, 1] & random_palindromes[i, 1] <= 8000 ) {
print(random_palindromes[i , 1])
}
}
for (i in 1:100) {
random_palindromes[ , i] <- sort(sample(1:229354, 296, replace = FALSE))
}
random_palindromes
head(random_palindromes)
seq(1:229354, 500)
seq(from=1, to=229354, by=500)
seq(from=1, to=229354, by=499)
sequence <- seq(from=1, to=229354, by=499)
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
count(random_palindromes[j , 1])
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
tally(random_palindromes[j , 1])
}
}
library('dplyr')
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
count(random_palindromes[j , 1])
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
tally(random_palindromes[j , 1])
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
}
sequence <- seq(from = 1, to = 229354, by = 3999)
sequence
sequence <- seq(from = 1, to = 229354, by = 4000)
length(sequence)
sequence <- seq(from = 1, to = 229354, by = 4000)
for (i in 1:length(sequence)){
for (j in 1:295) {
if (random_palindromes[j, 1] <= sequence[1]) {
print(random_palindromes[j , 1])
}
}
for (j in 1:295) {
if (4001 <= random_palindromes[j, 1] & random_palindromes[j, 1] <= 8000 ) {
print(random_palindromes[j , 1])
}
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= sequence[1]) {
print(random_palindromes[j , 1])
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= sequence[1]) {
print(random_palindromes[j , 1])
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
}
sequence
for (j in 1:295) {
if (random_palindromes[j, 1] <= (sequence[2] - sequence[1])) {
print(random_palindromes[j , 1])
}
}
for (i in 1:length(sequence)){
for (j in 1:295) {
if (random_palindromes[j, 1] <= (sequence[i + 1] - sequence[i])) {
print(random_palindromes[j , 1])
}
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= sequence[1]) {
print(random_palindromes[j , 1])
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= sequence[1]) {
print(random_palindromes[j , 1])
}
}
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
}
for (i in 1:length(sequence[-1])){
for (j in 1:295) {
if (random_palindromes[j, 1] <= (sequence[i + 1] - sequence[i])) {
print(random_palindromes[j , 1])
}
}
}
sequence
sequence[-1]
for (i in 1:length(sequence[-1])){
for (j in 1:295) {
if (random_palindromes[j, 1] <= (sequence[i + 1] - sequence[i])) {
print(random_palindromes[j , 1])
}
}
}
for (j in 1:295) {
for (i in 1:length(sequence[-1])){
if (random_palindromes[j, 1] <= (sequence[i + 1] - sequence[i])) {
print(random_palindromes[j , 1])
}
}
}
for (i in 1:length(sequence[-1])){
for (j in 1:295) {
if (random_palindromes[j, 1] <= (sequence[i + 1] - sequence[i])) {
print(random_palindromes[j , 1])
}
}
}
for (i in 1:length(sequence[-1])){
for (j in 1:295) {
if (random_palindromes[j, 1] <= (sequence[i + 1] - sequence[i])) {
}
print(random_palindromes[j , 1])
}
}
for (i in 1:length(sequence[-1])){
for (j in 1:295) {
if (random_palindromes[j, 1] <= (sequence[i + 1] - sequence[i])) {
}
}
print(random_palindromes[j , 1])
}
for (i in 1:length(sequence[-1])){
for (j in 1:295) {
if (random_palindromes[j, 1] <= (sequence[i + 1] - sequence[i])) {
print(random_palindromes[j , 1])
}
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= (sequence[i + 1] - sequence[i])) {
print(random_palindromes[j , 1])
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
}
}
for (j in 1:295) {
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
}
for (j in 1:296) {
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
}
hello <-   for (j in 1:296) {
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
}
hello
filter(random_palindromes[ , 1])
random_palindromes1 <- random_palindromes[ , 1]
random_palindromes1
filter(random_palindromes1 < 4000)
str(random_palindromes1)
View(random_palindromes)
View(random_palindromes)
random_palindromes1 <- random_palindromes[ , 1]
filter(random_palindromes1, < 4000)
filter(random_palindromes1, 4000)
filter(random_palindromes1, random_palindromes1 < 4000)
random_palindromes1 <- as.data.frame(random_palindromes[ , 1])
View(random_palindromes)
View(random_palindromes1)
str(random_palindromes1)
filter(random_palindromes1, rrandom_palindromes[, 1] < 4000)
filter(random_palindromes1, random_palindromes[, 1] < 4000)
length(filter(random_palindromes1, random_palindromes[, 1] < 4000))
filter(random_palindromes1, random_palindromes[, 1] < 4000)
sizeof(filter(random_palindromes1, random_palindromes[, 1] < 4000))
str(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 & random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
library('dplyr')
set.seed(3)
random_palindromes <- matrix(NA , 296, 100)
for (i in 1:100) {
random_palindromes[ , i] <- sort(sample(1:229354, 296, replace = FALSE))
}
sequence <- seq(from = 1, to = 229354, by = 4000)
for (i in 1:length(sequence)){
for (j in 1:296) {
if (random_palindromes[j, 1] <= 4000) {
print(random_palindromes[j , 1])
}
}
for (j in 1:296) {
if (4001 <= random_palindromes[j, 1] & random_palindromes[j, 1] <= 8000 ) {
print(random_palindromes[j , 1])
}
}
}
random_palindromes1 <- as.data.frame(random_palindromes[ , 1])
for (i in 1:length(sequence[-1])){
for (j in 1:295) {
if (random_palindromes[j, 1] <= (sequence[i + 1] - sequence[i])) {
print(random_palindromes[j , 1])
}
}
}
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 & random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 & random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 & random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 8001 & random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 & random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 8001 & random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 12001 & random_palindromes[, 1] < 16000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 & random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 8001 & random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 12001 & random_palindromes[, 1] < 16000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 16001 & random_palindromes[, 1] < 20000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 & random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 8001 & random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 12001 & random_palindromes[, 1] < 16000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 16001 & random_palindromes[, 1] < 20000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 20001 & random_palindromes[, 1] < 24000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 & random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 8001 & random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 12001 & random_palindromes[, 1] < 16000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 16001 & random_palindromes[, 1] < 20000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 20001 & random_palindromes[, 1] < 24000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 24001 & random_palindromes[, 1] < 28000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 && random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 8001 & random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 12001 & random_palindromes[, 1] < 16000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 16001 & random_palindromes[, 1] < 20000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 20001 & random_palindromes[, 1] < 24000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 24001 & random_palindromes[, 1] < 28000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 | random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 | random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 8001 & random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 12001 & random_palindromes[, 1] < 16000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 16001 & random_palindromes[, 1] < 20000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 8001 | random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4001 | random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 8001 | random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 12001 & random_palindromes[, 1] < 16000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 16001 & random_palindromes[, 1] < 20000))
nrow(filter(random_palindromes1, random_palindromes[, 1] < 20001 & random_palindromes[, 1] < 24000))
filter(random_palindromes1, random_palindromes[, 1] < 4000)
filter(random_palindromes1, random_palindromes[, 1] < 4001 & random_palindromes[, 1] < 8000)
filter(random_palindromes1, random_palindromes[, 1] < 8001 * random_palindromes[, 1] < 12000)
filter(random_palindromes1, random_palindromes[, 1] < 4000)
filter(random_palindromes1, random_palindromes[, 1] < 4001 & random_palindromes[, 1] < 8000)
filter(random_palindromes1, random_palindromes[, 1] < 8001 & random_palindromes[, 1] < 12000)
filter(random_palindromes1, random_palindromes[, 1] < 12001 & random_palindromes[, 1] < 16000)
filter(random_palindromes1, random_palindromes[, 1] < 16001 & random_palindromes[, 1] < 20000)
filter(random_palindromes1, random_palindromes[, 1] < 20001 & random_palindromes[, 1] < 24000)
filter(random_palindromes1, random_palindromes[, 1] < 24001 & random_palindromes[, 1] < 28000)
filter(random_palindromes1, random_palindromes[, 1] < 4000)
filter(random_palindromes1, random_palindromes[, 1] > 4001 & random_palindromes[, 1] < 8000)
filter(random_palindromes1, random_palindromes[, 1] > 8001 & random_palindromes[, 1] < 12000)
filter(random_palindromes1, random_palindromes[, 1] > 12001 & random_palindromes[, 1] < 16000)
filter(random_palindromes1, random_palindromes[, 1] > 16001 & random_palindromes[, 1] < 20000)
filter(random_palindromes1, random_palindromes[, 1] > 20001 & random_palindromes[, 1] < 24000)
filter(random_palindromes1, random_palindromes[, 1] > 24001 & random_palindromes[, 1] < 28000)
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
nrow(filter(random_palindromes1, random_palindromes[, 1] > 4001 & random_palindromes[, 1] < 8000))
nrow(filter(random_palindromes1, random_palindromes[, 1] > 8001 & random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] > 12001 & random_palindromes[, 1] < 16000))
nrow(filter(random_palindromes1, random_palindromes[, 1] > 16001 & random_palindromes[, 1] < 20000))
nrow(filter(random_palindromes1, random_palindromes[, 1] > 20001 & random_palindromes[, 1] < 24000))
nrow(filter(random_palindromes1, random_palindromes[, 1] > 24001 & random_palindromes[, 1] < 28000))
iterator <- seq(from = 1, to = 229354, by = 4000)
iterator
iterator <- seq(from = 1, to = 229354, by = 3999)
iterator
iterator <- seq(from = 1, to = 229354, by = 4000)
iterator
length(iterator)
iterator <- seq(from = 1, to = 229354, by = 4000)
for (i in 1:length(iterator)) {
nrow(filter(random_palindromes1, random_palindromes[, 1] > (iterator[i + 1] - iterator[1]) & random_palindromes[, 1] < iterator[i + 2] - iterator[1]))
}
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
iterator <- seq(from = 1, to = 229354, by = 4000)
for (i in 1:length(iterator)) {
count <- nrow(filter(random_palindromes1, random_palindromes[, 1] > (iterator[i + 1] - iterator[1]) & random_palindromes[, 1] < iterator[i + 2] - iterator[1]))
print(count())
}
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
iterator <- seq(from = 1, to = 229354, by = 4000)
for (i in 1:length(iterator)) {
count <- nrow(filter(random_palindromes1, random_palindromes[, 1] > (iterator[i + 1] - iterator[1]) & random_palindromes[, 1] < iterator[i + 2] - iterator[1]))
print(count
}
nrow(filter(random_palindromes1, random_palindromes[, 1] < 4000))
iterator <- seq(from = 1, to = 229354, by = 4000)
for (i in 1:length(iterator)) {
count <- nrow(filter(random_palindromes1, random_palindromes[, 1] > (iterator[i + 1] - iterator[1]) & random_palindromes[, 1] < iterator[i + 2] - iterator[1]))
print(count)
}
nrow(filter(random_palindromes1, random_palindromes[, 1] > 8001 & random_palindromes[, 1] < 12000))
nrow(filter(random_palindromes1, random_palindromes[, 1] > 12001 & random_palindromes[, 1] < 16000))
nrow(filter(random_palindromes1, random_palindromes[, 1] > 16001 & random_palindromes[, 1] < 20000))
nrow(filter(random_palindromes1, random_palindromes[, 1] > 20001 & random_palindromes[, 1] < 24000))
nrow(filter(random_palindromes1, random_palindromes[, 1] > 24001 & random_palindromes[, 1] < 28000))
for (i in 1:length(iterator)) {
count <- nrow(filter(random_palindromes1, random_palindromes[, 1] > (iterator[i + 1] - iterator[1]) & random_palindromes[, 1] < iterator[i + 2] - iterator[1]))
print(count)
}
getwd()
setwd("Documents/Academic/2018/spring-18/stat135/lab02/")
data <- read.csv("hcmv.csv")
data
for (i in 1:length(iterator)) {
count <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
print(count)
}
#running for loop on hcmv data
for (i in 1:length(iterator[-1])) {
count <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
print(count)
}
#running for loop on hcmv data
for (i in 1:length(iterator[-2])) {
count <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
print(count)
}
#running for loop on hcmv data
for (i in 1:length(iterator[-3])) {
count <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
print(count)
}
for (i in 1:length(iterator)) {
count <- nrow(filter(random_palindromes1, random_palindromes[, 1] > (iterator[i + 1] - iterator[1]) & random_palindromes[, 1] < iterator[i + 2] - iterator[1]))
print(count)
}
for (i in 1:length(iterator)) {
count <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
print(count)
}
data, data[, 1]
data[, 1]
data[, 2]
#running for loop on hcmv data
nrow(filter(data, data[, 1] < 4000))
for (i in 1:length(iterator)) {
count <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
print(count)
}
nrow(filter(data, data[, 1] < 4000))
nrow(filter(data, data[, 1] < 4000))
for (i in 1:length(iterator)) {
count <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
print(count)
}
for (i in 1:length(iterator)) {
count[] <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
}
count
for (i in 1:length(iterator)) {
count[i] <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
}
count
length(count)
iterator
iterator[-2]
iterator[1:(length(iterator) - 2)]
iterator[1:(length(iterator) - 3)]
iterator <- seq(from = 1, to = 229354, by = 4000)
iterator <- iterator[1:(length(iterator) - 3)]
nrow(filter(data, data[, 1] < 4000))
for (i in 1:length(iterator)) {
count[i] <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
}
count
iterator <- seq(from = 1, to = 229354, by = 4000)
for (i in 1:length(iterator)) {
count[i] <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
}
count
lenth
length(count)
count <- count[1:56]
count
lenth
length(count)
count <- 0
count[1] <- nrow(filter(data, data[, 1] < 4000))
for (i in 1:length(iterator)) {
count[i + 1] <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
}
count <- count[1:56]
count
count <- 0
count[1] <- nrow(filter(data, data[, 1] < 4000))
for (i in 1:length(iterator)) {
count[i + 1] <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
}
count <- count[1:57]
count
count <- 0
count[1] <- nrow(filter(data, data[, 1] < 4000))
for (i in 1:length(iterator)) {
count[i + 1] <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
}
count
#running for loop on hcmv data
count <- 0
count[1] <- nrow(filter(data, data[, 1] < 4000))
for (i in 1:length(iterator)) {
count[i + 1] <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
}
count <- count[1:57]
count
length(count)
#running for loop on hcmv data
count <- 0
count[1] <- nrow(filter(data, data[, 1] < 4000))
for (i in 1:length(iterator)) {
count[i + 1] <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
}
count <- count[1:57]
#running for loop on hcmv data
count <- 0
count[1] <- nrow(filter(data, data[, 1] < 4000))
for (i in 1:length(iterator)) {
count[i + 1] <- nrow(filter(data, data[, 1] > (iterator[i + 1] - iterator[1]) & data[, 1] < iterator[i + 2] - iterator[1]))
}
count <- count[1:57]
count
hist(count)
plot(count)
mean(count)
dpois(count, mean(count))
hist(dpois(count, mean(count))
)
plot(dpois(count, mean(count)))
